@inject HttpClient http
@using TaskManagementInterface.Data
@using TaskManagementInterface.Services.Categories
@inject IModalService Modal
<div>

    <button @onclick="SubmitForm" class="btn btn-primary">Delete</button>
    <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
</div>



@code { [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    CategoryServices CategoryServices = new CategoryServices();
    private tbl_TABLE_CATEGORY kategoriModel = new tbl_TABLE_CATEGORY();

    [Parameter] public string tableName { get; set; }
    [Parameter] public int uid { get; set; }
    private string returnValue = "";



    void SubmitForm() => DeleteCategory();
    void Cancel() => BlazoredModal.Cancel();
    private async Task DeleteCategory()
    {
        Error errorModel = new Error();

        errorModel = await CategoryServices.DeleteCategory(uid.ToString(), tableName);
        var parametersError = new ModalParameters();

        parametersError.Add(nameof(ErrorDatabaseMessage.ErrorName), errorModel.ERRORNAME);
        parametersError.Add(nameof(ErrorDatabaseMessage.Id), errorModel.UID);
        var messageForm = Modal.Show<ErrorDatabaseMessage>("Message", parametersError);


        BlazoredModal.Close(ModalResult.Ok(returnValue));
    } }