@page "/Reports"
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.Navigations
@using TaskManagementInterface.Data
@using Newtonsoft.Json
@using Syncfusion.Blazor.Data
@inject HttpClient http
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Calendars

@inject NavigationManager NavigationManager
@inject HttpClient http
@inject IJSRuntime jsRunTime





<div class="container py-3">
    <div class="row">
        <div class="col-md-6">
            <label for="date">Select Machine:</label>
            <SfDropDownList TValue="string" Placeholder="Select Machine" TItem="Machines" DataSource="@machines">
                <DropDownListEvents TValue="string" ValueChange="EntitieClicked"></DropDownListEvents>
                <DropDownListFieldSettings Value="uid" Text="machineName"></DropDownListFieldSettings>
            </SfDropDownList>
        </div>
        <div class="col-md-6">
            <div>
                <label for="date">Pick Data Range:</label>
                <SfDateRangePicker @bind-StartDate="@StartValue" @bind-EndDate="@EndValue"></SfDateRangePicker>

            </div>
        </div>



    </div>
    <br />
    <div class="col-md-12"
        
        <SfButton @onclick="MachineReporting" CssClass="e-primary">Get Report</SfButton>
    </div>
    <br />
    <div>
        <SfGrid TValue="MachineReporting2" DataSource="@machreps" AllowPaging="true" AllowSorting="true">

            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridColumns>
                <GridColumn Field=@nameof(MachineReporting2.hoursSpend) HeaderText="Hours Active" TextAlign="TextAlign.Left" Width="80"></GridColumn>
                <GridColumn Field=@nameof(MachineReporting2.applicationName) HeaderText="Application Name" Width="80"></GridColumn>

            </GridColumns>



        </SfGrid>
    </div>
</div>














@code{

    public class Machines
    {
        public int uid { get; set; }
        public string machineName { get; set; }
    }

    public class MachineReporting2
    {
        public float hoursSpend { get; set; }
        public string applicationName { get; set; }
    }

    public List<Machines> machines = new List<Machines>();
    public List<MachineReporting2> machreps = new List<MachineReporting2>();

    string selectedMachine;



    protected override async Task OnInitializedAsync()
    {
        machines = await http.GetJsonAsync<List<Machines>>("http://192.168.1.109/api/Machines/GetAll_Machines");
    }

    private async Task MachineReporting()
    {
        string machid = selectedMachine;
        string s = "http://192.168.1.109/api/MachinesReporting/GetAll_MachineRecordingByUID?uid=" + machid + "&dateBegin=" + StartValue?.ToString("MM-dd-yyyy") + "&dateEnd=" + EndValue?.ToString("MM-dd-yyyy");
        machreps = await http.GetJsonAsync<List<MachineReporting2>>(s);
    }

    void EntitieClicked(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> e)
    {
        string value = e.Value.ToString();
        selectedMachine = value;
        StateHasChanged();

    }

    public DateTime? StartValue { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 01, 01, 01);
    public DateTime? EndValue { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, DateTime.Now.Hour, DateTime.Now.Minute, DateTime.Now.Second);



}











