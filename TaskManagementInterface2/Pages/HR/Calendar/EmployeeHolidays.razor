@page "/EmployeeHolidays"
@using Syncfusion.Blazor.Schedule
@inject IModalService Modal
@using TaskManagementInterface.Shared.Calendar
@using TaskManagementInterface.Shared.Holidays
@using TaskManagementInterface.Data.CALENDAR
<div>
    <div class="row">
        <div class="col-md-7">
            <SfTextBox @bind-Value="EmployeeName"></SfTextBox>
        </div>
        <div class="col-md-1">
            <SfButton @onclick="SelectEmployee">...</SfButton>
        </div>
    </div>
    <br />
   
    <div class="row">
        <div class="col-md-3">
            <SfButton @onclick="AddHoliday"> Add</SfButton>
        </div>
    </div>
    <br />
    
    
    <div class="row">

        <div class="col-md-8">
            <SfSchedule EditorTemplate="false" TValue="AppointmentData" @ref="@ScheduleRef" Width="100%" Height="510px" SelectedDate="@DateTime.Now">
                <ScheduleViews>
                    <ScheduleEvents TValue="AppointmentData" OnEventClick="OnEventClick"></ScheduleEvents>
                    <ScheduleEventSettings AllowAdding="false" AllowDeleting="false" AllowEditing="false"  TValue="AppointmentData" DataSource="@DataSource"></ScheduleEventSettings>
                    <ScheduleView Option="View.Month"></ScheduleView>
                </ScheduleViews>
            </SfSchedule>
            </div>

            <div class="col-md-3">
                <SfTextBox></SfTextBox>
                <SfTextBox></SfTextBox>
                <SfTextBox></SfTextBox>

            </div>

        </div>

    <br/>
        <div>
            <div class="col-md-2">
                <SfButton>Delete</SfButton>
            </div>
        </div>

    </div>

@*custom code start*@

@*custom code end*@
@code{
    string EmployeeName = "";
    string _returnMessage = "";
    string EmployeeId = "";
    List<TaskManagementInterface.Data.Calendar.tbl_TABLE_Model_Calendar> Holidays = new List<TaskManagementInterface.Data.Calendar.tbl_TABLE_Model_Calendar>();
    TaskManagementInterface.Services.Calendar.CalendarServices calendarservice = new Services.Calendar.CalendarServices();
    AppointmentData model = new AppointmentData();
    SfSchedule<AppointmentData> ScheduleRef;
    public string typeUid = "";
    public string categoryId = "";

    List<AppointmentData> DataSource = new List<AppointmentData>();





    public async void OnEventClick(EventClickArgs<AppointmentData> args)
    {
        var CellData = await ScheduleRef.GetEventDetails(args.Element);

    }

    public class AppointmentData
    {
        public int Id { get; set; }
        public string Subject { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public string Name { get; set; }

    }

    public async Task AddHoliday()
    {
        var parameters = new ModalParameters();

        parameters.Add(nameof(AddHolidays.EmployeeId), Convert.ToInt32(EmployeeId));
        parameters.Add(nameof(AddHolidays.TypeId), typeUid);
        parameters.Add(nameof(AddHolidays.CategoryId), categoryId);

        var messageForm = Modal.Show<AddHolidays>("AddHoliday", parameters);
        var result = await messageForm.Result;
        if (!result.Cancelled)
            _returnMessage = result.Data?.ToString() ?? string.Empty;
    }

    protected async Task SelectEmployee()
    {
        var messageForm = Modal.Show<ChooseEmployee>("Choose Emplyee");
        var result = await messageForm.Result;
        if (!result.Cancelled)
            _returnMessage = result.Data?.ToString() ?? string.Empty;

        string[] test = (string[])result.Data;

        EmployeeName = test[1];
        EmployeeId = test[0];
        Holidays = await calendarservice.SelectEmployeeHolidays(EmployeeId.ToString());
        foreach (var element in Holidays)
        {
            AppointmentData model = new AppointmentData();

            model.Id = element.uid;
            model.Subject = element.description;
            model.StartTime = DateTime.Parse(element.nomination);
            model.EndTime = DateTime.Parse(element.nomination);
            model.Name = element.description;

            DataSource.Add(model);

        }
        typeUid = Holidays.FirstOrDefault().type_uid.ToString();
        categoryId = Holidays.FirstOrDefault().calendaR_CATEGORY_UID.ToString();
        StateHasChanged();

    }

}