#pragma checksum "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b9ad4ce8bc68c88f97da5a150d1e219c9fa5f882"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TaskManagementInterface.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using TaskManagementInterface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using TaskManagementInterface.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using TaskManagementInterface.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.TreeGrid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/configCategory")]
    public partial class ConfigCategory : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 142 "C:\Users\User\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
       
    int idSup;
    bool ShowPopup = false;
    void Save(EditContext obj)
    {
        BusinessObject model = (BusinessObject)(obj.Model);
        if (model.ElementId > 0)
        {
            //edit form
        }
        else
        {
            // new
        }
        int prindi = idSup;
    }
    private void Prind(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        idSup = Convert.ToInt32(e.Value.ToString());
    }
    void AddNewForecast()
    {
        // Open the Popup
        ShowPopup = true;
        StateHasChanged();
    }

    private List<tbl_TABLE_Model> Entities = new List<tbl_TABLE_Model>();
    public class Prindi
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

    List<Prindi> DropDownPrindi = new List<Prindi>();

    private string SelectedTable;
    Kategorite cat = new Kategorite();
    protected override async Task OnInitializedAsync()
    {
        Entities = await http.GetJsonAsync<List<tbl_TABLE_Model>>("http://192.168.1.118/GetAll_Entities");
    }

    void EntitieClicked(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        string value = e.Value.ToString();
        SelectedTable = value;
        this.FillDataToTable();
    }

    public class Kategorite
    {
        public int uid { get; set; }
        public int? uid_sup { get; set; }
        public bool? elcat { get; set; }
        public string code { get; set; }
        public string nomination { get; set; }
        public string description { get; set; }
        public string description1 { get; set; }
        public string description2 { get; set; }
        public float queue { get; set; }
        public int? user_uid { get; set; }
    }


    private Boolean Check = false;
    public BusinessObject model = new BusinessObject();
    Dictionary<string, object> Elcat = new Dictionary<string, object>() { { "name", "Elcat" } };
    Dictionary<string, object> ElementId = new Dictionary<string, object>() { { "name", "ElementId" } };
    Dictionary<string, object> Nomination = new Dictionary<string, object>() { { "name", "Nomination" } };
    Dictionary<string, object> Description = new Dictionary<string, object>() { { "name", "Description" } };
    Dictionary<string, object> Code = new Dictionary<string, object>() { { "name", "Code" } };
    Dictionary<string, object> ParentName = new Dictionary<string, object>() { { "name", "ParentName" } };




    public class BusinessObject
    {
        public int ElementId { get; set; }
        public string Nomination { get; set; }
        public string Description { get; set; }
        public int Progress { get; set; }
        public string Code { get; set; }
        public int? ParentId { get; set; }
        public bool? Elcat { get; set; }
        public string ParentName { get; set; }
        public List<Kategorite> PrindiId { get; set; }
    }

    public List<BusinessObject> TreeGridData { get; set; }
    public List<BusinessObject> TreeData = new List<BusinessObject>();
    private List<Kategorite> kategori = new List<Kategorite>();
    private BusinessObject kategoriPopUp = new BusinessObject();



    protected async Task FillDataToTable()
    {

        string url = "http://192.168.1.118/api/tbl_" + SelectedTable + "_CATEGORY";
        kategori = await http.GetJsonAsync<List<Kategorite>>(url);
        TreeData.Clear();
        foreach (var element in kategori)
        {
            Prindi prnd = new Prindi();
            prnd.ID = element.uid.ToString();
            prnd.Text = element.nomination;
            DropDownPrindi.Add(prnd);
            BusinessObject item = new BusinessObject();
            if (element.uid_sup == -1)
            {
                item.ParentId = null;
            }

            else

            {
                item.ParentName = element.nomination;

                item.ParentId = element.uid_sup;
            }


            item.ElementId = element.uid;
            item.Nomination = element.nomination;
            item.Description = element.description;
            item.Elcat = element.elcat;
            item.Code = element.code;

            TreeData.Add(item);


        }
        TreeGridData = TreeData.ToList();
        StateHasChanged();
    }

    public async void OnActionBegin(ActionEventArgs<BusinessObject> args)
    {
        string a = null;
        if (args.RequestType.ToString() == "BeginEdit")
        {
            kategoriPopUp = (BusinessObject)(args.RowData);
            ShowPopup = true;
            kategoriPopUp.PrindiId = kategori;
            StateHasChanged();
            //SaveNewCategory(newCategory);
        }
        else if (args.RequestType.ToString() == "Add")
        {
            kategoriPopUp = (BusinessObject)(args.Data);
            kategoriPopUp.PrindiId = kategori;
            ShowPopup = true;


        }


        else if (args.RequestType.ToString() == "Delete")
        {
            kategoriPopUp = (BusinessObject)(args.Data);

        }

    }
    private async Task DeleteCategory(BusinessObject newCategory)
    {
        string url = "http://192.168.1.118/api/tbl_CLIENTS_Category/" + newCategory.ElementId;
        await http.DeleteAsync(url);
        StateHasChanged();

    }
    private async Task SaveEditedCategory(BusinessObject newCategory)
    {


        string parameters = "?uid_sup=" + newCategory.ParentId + "&description=" + newCategory.Description;
        string url = "http://192.168.1.118/api/tbl_CLIENTS_CATEGORY/" + newCategory.ElementId + "/" + newCategory.ParentId + "/" + newCategory.Elcat + "/" + newCategory.Code + "/" + newCategory.Nomination + parameters;
        await http.PutJsonAsync(url, "");

    }
    //private async Task SaveNewCategory(BusinessObject newCategory)
    //{
    //    string parameters = "?codeend=9999&description="+newCategory.Description;

    //    string urltosend = "http://192.168.1.118/api/tbl_CLIENTS_TYPE/" + newCategory.ParentId + "/" + newCategory.Elcat + "/" + newCategory.Code + "/" + newCategory.Nomination + parameters;
    //    await http.PostJsonAsync(urltosend, "");
    //    List<LastUid> lst = await http.GetJsonAsync<List<LastUid>>("http://192.168.1.118/api/tbl_INTER_TABLE_TABLE/SelectLastUid?tableName=CLIENTS_TYPE");
    //    LastUid uidTip = lst.FirstOrDefault();
    //    string urltypkategori = "http://192.168.1.118/api/tbl_INTER_TABLE_TABLE/SPI_INTER_TABLE_TYPE_CATEGORY?tablename=CLIENTS" & tabletype_uid = " + uidTip.uid + " & tabletype_cat_uid = " + selectedKategoriId + " & user_uid = 1";

    //    //await http.PostJsonAsync(urltypkategori, "");

    //    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
