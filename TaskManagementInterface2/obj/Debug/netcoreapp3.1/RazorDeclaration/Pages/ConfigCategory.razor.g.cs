#pragma checksum "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ec920e4679ab3a3d1be72f2bc4df508abaa56adb"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TaskManagementInterface.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using TaskManagementInterface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using TaskManagementInterface.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using TaskManagementInterface.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.TreeGrid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/configCategory")]
    public partial class ConfigCategory : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 156 "C:\Users\remio\source\repos\TaskManagement\TaskManagementInterface2\Pages\ConfigCategory.razor"
       
    int idSup;
    bool ShowPopup = false;
    private List<tbl_TABLE_Model> Entities = new List<tbl_TABLE_Model>();
    private string SelectedTable;
    Kategorite cat = new Kategorite();
    public List<BusinessObject> TreeGridData { get; set; }
    public List<BusinessObject> TreeData = new List<BusinessObject>();
    private List<Kategorite> kategori = new List<Kategorite>();
    private BusinessObject kategoriPopUp = new BusinessObject();
    public bool deleteConfirmation = false;

    private async void DeleteRecord()
    {
       await DeleteCategory(kategoriPopUp);
        deleteConfirmation = false;
        await    FillDataToTable();
        StateHasChanged();

    }
    private void Cancel()
    {
        deleteConfirmation = false;


    }

    void Disablepopup()
    {
        ShowPopup = false;
    }
    public async Task Save(EditContext obj)
    {
        BusinessObject model = (BusinessObject)(obj.Model);

        if (model.ElementId > 0)
        {
            string parameters = "?description=" + model.Description;
            string url = "http://192.168.1.118/api/tbl_CLIENTS_CATEGORY/" + model.ElementId + "/" + model.ParentId + "/" + model.Elcat + "/" + model.Code + "/" + model.Nomination + parameters;
            await http.PutJsonAsync(url, "");
            ShowPopup = false;
            await FillDataToTable();
            StateHasChanged();
        }
        else
        {
            string urltypkategori = "http://192.168.1.118/api/tbl_CLIENTS_CATEGORY/" + model.ParentId + "/" + model.Elcat + "/" + model.Code + "/" + model.Nomination;
            await http.PostJsonAsync(urltypkategori, "");
            ShowPopup = false;
            await FillDataToTable();
            StateHasChanged();

        }
    }
    private void Prind(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        idSup = Convert.ToInt32(e.Value.ToString());
    }

    protected override async Task OnInitializedAsync()
    {
        Entities = await http.GetJsonAsync<List<tbl_TABLE_Model>>("http://192.168.1.118/GetAll_Entities");
    }

   async void EntitieClicked(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        string value = e.Value.ToString();
        SelectedTable = value;
       await this.FillDataToTable();
    }


    public class BusinessObject
    {
        public int ElementId { get; set; }
        public string Nomination { get; set; }
        public string Description { get; set; }
        public int Progress { get; set; }
        public string Code { get; set; }
        public int? ParentId { get; set; }
        public bool? Elcat { get; set; }
        public string ParentName { get; set; }
        public List<Kategorite> PrindiId { get; set; }
    }


    protected async Task FillDataToTable()
    {

        string url = "http://192.168.1.118/api/tbl_" + SelectedTable + "_CATEGORY";
        kategori = await http.GetJsonAsync<List<Kategorite>>(url);
        TreeData.Clear();
        foreach (var element in kategori)
        {

            BusinessObject item = new BusinessObject();
            if (element.uid_sup == -1)
            {
                item.ParentId = null;
            }

            else

            {
                item.ParentName = element.nomination;

                item.ParentId = element.uid_sup;
            }


            item.ElementId = element.uid;
            item.Nomination = element.nomination;
            item.Description = element.description;
            item.Elcat = element.elcat;
            item.Code = element.code;

            TreeData.Add(item);


        }
        TreeGridData = TreeData.ToList();
        StateHasChanged();
    }

    public  void OnActionBegin(ActionEventArgs<BusinessObject> args)
    {
        string a = null;
        if (args.RequestType.ToString() == "BeginEdit")
        {
            kategoriPopUp = (BusinessObject)(args.RowData);
            ShowPopup = true;
            kategoriPopUp.PrindiId = kategori;
            StateHasChanged();
            //SaveNewCategory(newCategory);
        }
        else if (args.RequestType.ToString() == "Add")
        {
            kategoriPopUp = (BusinessObject)(args.Data);
            kategoriPopUp.PrindiId = kategori;
            ShowPopup = true;


        }


        else if (args.RequestType.ToString() == "Delete")
        {
            kategoriPopUp = (BusinessObject)(args.Data);
            deleteConfirmation = true;

        }

    }
    private async Task DeleteCategory(BusinessObject newCategory)
    {
        string url = "http://192.168.1.118/api/tbl_CLIENTS_Category/" + newCategory.ElementId;
        await http.DeleteAsync(url);
        StateHasChanged();

    }
    private async Task SaveEditedCategory(BusinessObject newCategory)
    {


        string parameters = "?uid_sup=" + newCategory.ParentId + "&description=" + newCategory.Description;
        string url = "http://192.168.1.118/api/tbl_CLIENTS_CATEGORY/" + newCategory.ElementId + "/" + newCategory.ParentId + "/" + newCategory.Elcat + "/" + newCategory.Code + "/" + newCategory.Nomination + parameters;
        await http.PostJsonAsync(url,"");

    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
