#pragma checksum "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\Pages\Category.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6bd979974eb92a3f16304b391e0ee89c09702161"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TaskManagementInterface.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using TaskManagementInterface;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\_Imports.razor"
using TaskManagementInterface.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\Pages\Category.razor"
using TaskManagementInterface.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\Pages\Category.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\Pages\Category.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/category")]
    public partial class Category : LayoutComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 198 "C:\Users\Admin\Desktop\Sitel\TaskManagement\TaskManagementInterface2\Pages\Category.razor"
      

    public List<tbl_TABLE_Model> Entities = new List<tbl_TABLE_Model>();
    private List<MailItem> MyElement = new List<MailItem>();
    private List<MailItem> MyTipElement = new List<MailItem>();
    private List<MailItem> MyKategoryElement = new List<MailItem>();



    private List<Kategorite> kategori = new List<Kategorite>();
    private Kategorite kategorite = new Kategorite();
    private Kategorite kategoritenew = new Kategorite();
    private List<Kategorite> Zgjidhprindin = new List<Kategorite>();


    SfTreeView<MailItem> tree;
    SfContextMenu menu;


    bool KrijoKategori = false;
    bool ShfaqButon = false;
    bool Message = false;

    string selectedKategoriId;

    string selectedtable;


    //Mbushja e dropdownlistes me element
    protected override async Task OnInitializedAsync()
    {
        Entities = await http.GetJsonAsync<List<tbl_TABLE_Model>>("http://192.168.1.118/GetAll_Entities");
    }

    //Zgjedhja e nje entiteti
    void EntitieClicked(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        string value = e.Value.ToString();
        selectedtable = value;
        this.GetCategory(value);
        MyElement.Clear();
        MyTipElement.Clear();

        ShfaqButon = true;
        Message = false;
        StateHasChanged();

    }

    //Mbushja e treeView kategori me te dhena
    protected async Task GetCategory(string entitetiZgjedhur)
    {
        kategori = null;

        string url = "http://192.168.1.118/api/tbl_" + entitetiZgjedhur + "_CATEGORY";
        kategori = await http.GetJsonAsync<List<Kategorite>>(url);
        foreach (var element in kategori)
        {
            MailItem item = new MailItem();
            if (element.uid_sup > 0)
            {
                item.ParentId = element.uid_sup.ToString();
            }
            foreach (var child in kategori)
            {
                if (child.uid_sup == element.uid)
                {
                    item.HasSubFolders = true;
                }
            }

            item.Id = element.uid.ToString();
            item.ElementName = element.nomination;

            MyElement.Add(item);


        }
        StateHasChanged();

    }

    //Klikimi i nje elementi ne peme per kategorite
    public async void nodeClicked(NodeClickEventArgs args)
    {
        string eventString = JsonConvert.SerializeObject(args.Event);
        Dictionary<string, dynamic> eventParameters = JsonConvert.DeserializeObject<Dictionary<string, dynamic>>(eventString);
        if ((eventParameters["which"]).ToString() == "3")
        {
            this.selectedKategoriId = (await args.Node.GetAttribute("data-uid")).ToString();

            StateHasChanged();
        }
    }

    public List<MenuItem> MenuItems = new List<MenuItem>{

         new MenuItem { Text = "Add" },
         new MenuItem { Text = "Edit" },
         new MenuItem { Text = "Remove" }

    };

    //Menuja ne klikim te kategorise
    public void MenuSelect(MenuEventArgs args)
    {
        string selectedText;
        selectedText = args.Item.Text;

        if (selectedText == "Add")
        {

            Message = false;
            this.AddCategory();
        }
        else if (selectedText == "Edit")
        {

            Message = false;
            this.EditCategory();

        }
        else if (selectedText == "Remove")
        {
            Message = false;
            this.DeleteCategory();
        }


    }







    //Klikimi i nje elementi te pemes Per categorine
    public async void nodeCatClicked(NodeClickEventArgs args)
    {
        string eventString = JsonConvert.SerializeObject(args.Event);
        Dictionary<string, dynamic> eventParameters = JsonConvert.DeserializeObject<Dictionary<string, dynamic>>(eventString);
        if ((eventParameters["which"]).ToString() == "3")
        {
            this.selectedKategoriId = (await args.Node.GetAttribute("data-uid")).ToString();
            StateHasChanged();
        }
    }




    //Menuja qe shfaqet ne klikim te nje kategoria
    public void MenuSelectForKategori(MenuEventArgs args)
    {
        string selectedText;
        selectedText = args.Item.Text;
        if (selectedText == "Edit")
        {
            this.EditCategory();
            Message = false;

        }
        else if (selectedText == "Remove")
        {
            this.DeleteCategory();
            Message = false;

        }
        else if (selectedText == "Add")
        {

            this.AddCategory();
            Message = false;

        }
    }




    private void NewCategory()
    {
        kategoritenew.uid_sup = -1;

        this.AddCategory();

    }


    public async Task AddCategory()
    {
        kategoritenew.uid_sup = Convert.ToInt32(selectedKategoriId);
        KrijoKategori = true;
        kategorite.uid = 0;
        StateHasChanged();
    }




    //per tu permirsuar selecti i id
    protected async Task SaveNewCategory(EditContext context)
    {
        Kategorite model = (Kategorite)context.Model;
        string parameters = "?queue=" + model.queue + "&description=" + model.description;

        string urltosend = "http://192.168.1.118/api/tbl_" + selectedtable + "_CATEGORY/" + model.uid_sup + "/" + model.elcat + "/" + model.code + "/" + model.nomination + parameters;
        await http.PostJsonAsync(urltosend, "");
        List<LastUid> lst = await http.GetJsonAsync<List<LastUid>>("http://192.168.1.118/api/tbl_INTER_TABLE_TABLE/SelectLastUid?tableName=" + selectedtable + "_CATEGORY");
        LastUid uidKat = lst.FirstOrDefault();
        string urltypkategori = "http://192.168.1.118/api/tbl_INTER_TABLE_TABLE/SPI_INTER_TABLE_CATEGORY?tablename=" + selectedtable + "&table_uid=" + uidKat.uid + "&tablecat_uid=" + selectedKategoriId + "&user_uid=1";

        await http.PostJsonAsync(urltypkategori, "");
        kategoritenew.uid_sup = -1;
        Message = true;
        KrijoKategori = false;
        MyKategoryElement.Clear();
        StateHasChanged();


    }





    //Editimi i nje rekordi
    public async Task EditCategory()
    {
        KrijoKategori = false;
        string url = "http://192.168.1.118/api/tbl_" + selectedtable + "_CATEGORY/" + selectedKategoriId;
        List<Kategorite> permanent = await http.GetJsonAsync<List<Kategorite>>(url);
        kategorite = permanent.FirstOrDefault();
        StateHasChanged();
    }


    //editimi ka ngelur pergjys
    protected async Task SaveEditedCat(EditContext context)
    {
        Kategorite model = (Kategorite)context.Model;
        string parameters = "?description=" + model.description + "&user_uid=1";
        string url = "http://192.168.1.118/api/tbl_" + selectedtable + "_CATEGORY/" + selectedKategoriId + "/" + model.uid_sup + "/" + model.elcat + "/" + model.code + "/" + model.nomination + parameters;
        await http.PutJsonAsync(url, "");
        Message = true;
        kategorite.uid = 0;
        MyKategoryElement.Clear();
        kategoritenew.uid_sup = -1;
        this.StateHasChanged();



    }

 





    private async Task CheckboxClicked(object checkedValue)
    {
        if ((bool)checkedValue)
        {
            Zgjidhprindin = await http.GetJsonAsync<List<Kategorite>>("http://192.168.1.118/api/tbl_" + selectedtable + "_Category");
        }
        else
        {
            Zgjidhprindin.Clear();
        }
        StateHasChanged();
    }


    private void PrindiChanged(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        kategorite.uid_sup = Convert.ToInt32(e.Value.ToString());
    }









    //Fshirja e nje kategorie
    protected async Task DeleteCategory()
    {
        string url = "http://192.168.1.118/api/tbl_" + selectedtable + "_CATEGORY/" + selectedKategoriId.ToString();
        await http.DeleteAsync(url);
        Message = true;
        MyKategoryElement.Clear();
        StateHasChanged();


    }


    // Menuja Listat
    public List<MenuItem> MenuItemsForType = new List<MenuItem>{
        new MenuItem { Text = "Edit" },
        new MenuItem { Text = "Remove" },
        new MenuItem { Text = "Add" }
    };

    //Klasat
    public class MailItem
    {
        public string Id { get; set; }
        public string ParentId { get; set; }
        public string ElementName { get; set; }
        public bool Expanded { get; set; }
        public bool HasSubFolders { get; set; }
    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRunTime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    }
}
#pragma warning restore 1591
